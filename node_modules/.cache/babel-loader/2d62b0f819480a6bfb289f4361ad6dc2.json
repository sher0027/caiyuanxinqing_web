{"remainingRequest":"C:\\Users\\Sher\\Desktop\\1\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sher\\Desktop\\1\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Sher\\Desktop\\1\\src\\store\\modules\\user.js","dependencies":[{"path":"C:\\Users\\Sher\\Desktop\\1\\src\\store\\modules\\user.js","mtime":1632663015889},{"path":"C:\\Users\\Sher\\Desktop\\1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sher\\Desktop\\1\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Sher\\Desktop\\1\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgeyBsb2dpbkJ5VmVyaWZ5Q29kZSwgbG9naW5CeVBhc3N3b3JkLCBnZXRDb2RlIGFzIF9nZXRDb2RlLCBsb2dvdXQgYXMgX2xvZ291dCwgZ2V0SW5mbyBhcyBfZ2V0SW5mbyB9IGZyb20gJ0AvYXBpL3VzZXInOwppbXBvcnQgeyBnZXRUb2tlbiwgc2V0VG9rZW4sIHJlbW92ZVRva2VuIH0gZnJvbSAnQC91dGlscy9hdXRoJzsKaW1wb3J0IHsgcmVzZXRSb3V0ZXIgfSBmcm9tICdAL3JvdXRlcic7IC8vc3RhdGXlkoxtdXRhdGlvbnPph4zmjInpnIDov5vooYzliKDpmaTlkozmt7vliqDvvIzmr5TlpoLor7TvvIzlpoLmnpzkvaDpnIDopoHlrZjlgqjkuIDkuKrnlKjmiLdpZOWtl+auteeUqOS6juWQjue7reaOpeWPo++8jOebtOaOpea3u+WKoOi/m+adpe+8jOeUqHRoaXMuJHN0b3JlLnN0YXRlLnVzZXIuaWTkvr/lj6/lnKjlkI7nu63mlofku7bkuK3lvJXnlKgKCnZhciBnZXREZWZhdWx0U3RhdGUgPSBmdW5jdGlvbiBnZXREZWZhdWx0U3RhdGUoKSB7CiAgcmV0dXJuIHsKICAgIHRva2VuOiBnZXRUb2tlbigpLAogICAgbmFtZTogJycsCiAgICBhdmF0YXI6ICcnLAogICAgcGhvbmU6ICcnCiAgfTsKfTsKCnZhciBzdGF0ZSA9IGdldERlZmF1bHRTdGF0ZSgpOwp2YXIgbXV0YXRpb25zID0gewogIFJFU0VUX1NUQVRFOiBmdW5jdGlvbiBSRVNFVF9TVEFURShzdGF0ZSkgewogICAgT2JqZWN0LmFzc2lnbihzdGF0ZSwgZ2V0RGVmYXVsdFN0YXRlKCkpOwogIH0sCiAgU0VUX1RPS0VOOiBmdW5jdGlvbiBTRVRfVE9LRU4oc3RhdGUsIHRva2VuKSB7CiAgICBzdGF0ZS50b2tlbiA9IHRva2VuOwogIH0sCiAgU0VUX05BTUU6IGZ1bmN0aW9uIFNFVF9OQU1FKHN0YXRlLCBuYW1lKSB7CiAgICBzdGF0ZS5uYW1lID0gbmFtZTsKICB9LAogIFNFVF9BVkFUQVI6IGZ1bmN0aW9uIFNFVF9BVkFUQVIoc3RhdGUsIGF2YXRhcikgewogICAgc3RhdGUuYXZhdGFyID0gYXZhdGFyOwogIH0sCiAgU0VUX1BIT05FOiBmdW5jdGlvbiBTRVRfUEhPTkUoc3RhdGUsIHBob25lKSB7CiAgICBzdGF0ZS5waG9uZSA9IHBob25lOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgLy/lr4bnoIHnmbvlvZUKICBsb2dpbkJ5UGFzc3dvcmQ6IGZ1bmN0aW9uIGxvZ2luQnlQYXNzd29yZChfcmVmLCB1c2VySW5mbykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgdmFyIHBob25lID0gdXNlckluZm8ucGhvbmUsCiAgICAgICAgcGFzc3dvcmQgPSB1c2VySW5mby5wYXNzd29yZDsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIGxvZ2luKHsKICAgICAgICBwaG9uZTogcGhvbmUsCiAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgIGNvbW1pdCgnU0VUX1RPS0VOJywgZGF0YSk7CiAgICAgICAgc2V0VG9rZW4oZGF0YS50b2tlbik7CiAgICAgICAgcmVzb2x2ZSgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICB9KTsKICAgIH0pOwogIH0sCiAgLy/pqozor4HnoIHnmbvlvZUKICBsb2dpbkJ5VmVyaWZ5Q29kZTogZnVuY3Rpb24gbG9naW5CeVZlcmlmeUNvZGUoX3JlZjIsIHVzZXJJbmZvKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgdmFyIG5hbWUgPSB1c2VySW5mby5uYW1lLAogICAgICAgIHBob25lID0gdXNlckluZm8ucGhvbmUsCiAgICAgICAgdmVyaWZ5ID0gdXNlckluZm8udmVyaWZ5OwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgbG9naW4oewogICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgcGhvbmU6IHBob25lLAogICAgICAgIHZlcmlmeTogdmVyaWZ5CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgdmFyIGRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgIGNvbW1pdCgnU0VUX1RPS0VOJywgZGF0YSk7CiAgICAgICAgc2V0VG9rZW4oZGF0YSk7CiAgICAgICAgcmVzb2x2ZSgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICB9KTsKICAgIH0pOwogIH0sCiAgLy8gZ2V0IHVzZXIgaW5mbwogIGdldEluZm86IGZ1bmN0aW9uIGdldEluZm8oX3JlZjMpIHsKICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQsCiAgICAgICAgc3RhdGUgPSBfcmVmMy5zdGF0ZTsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIF9nZXRJbmZvKHN0YXRlLnRva2VuKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YTsKCiAgICAgICAgaWYgKCFkYXRhKSB7CiAgICAgICAgICByZXR1cm4gcmVqZWN0KCdWZXJpZmljYXRpb24gZmFpbGVkLCBwbGVhc2UgTG9naW4gYWdhaW4uJyk7CiAgICAgICAgfQoKICAgICAgICB2YXIgbmFtZSA9IGRhdGEubmFtZSwKICAgICAgICAgICAgcGhvbmUgPSBkYXRhLnBob25lOwogICAgICAgIGNvbW1pdCgnU0VUX25hbWUgJywgbmFtZSk7CiAgICAgICAgY29tbWl0KCdTRVRfUEhPTkUnLCBwaG9uZSk7CiAgICAgICAgcmVzb2x2ZShkYXRhKTsKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgfSk7CiAgICB9KTsKICB9LAogIC8vIOiOt+WPlumqjOivgeeggQogIGdldENvZGU6IGZ1bmN0aW9uIGdldENvZGUoX3JlZjQsIGJhc2VJbmZvKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjQuY29tbWl0OwogICAgdmFyIG5hbWUgPSBiYXNlSW5mby5uYW1lLAogICAgICAgIHBob25lID0gYmFzZUluZm8ucGhvbmU7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICBfZ2V0Q29kZSgpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2coJ+iOt+WPlumqjOivgeeggScpOwogICAgICAgIHJlc29sdmUoKTsKICAgICAgICB2YXIgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgY29tbWl0KCdTRVRfVE9LRU4nLCBkYXRhKTsKICAgICAgICBzZXRUb2tlbihkYXRhKTsKICAgICAgICByZXNvbHZlKCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgY29uc29sZS5sb2coJ+mqjOivgeeggeiOt+WPluWksei0pScpOwogICAgICB9KTsKICAgIH0pOwogIH0sCiAgLy8gdXNlciBsb2dvdXQKICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dChfcmVmNSkgewogICAgdmFyIGNvbW1pdCA9IF9yZWY1LmNvbW1pdCwKICAgICAgICBzdGF0ZSA9IF9yZWY1LnN0YXRlOwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgX2xvZ291dChzdGF0ZS50b2tlbikudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgcmVtb3ZlVG9rZW4oKTsgLy8gbXVzdCByZW1vdmUgIHRva2VuICBmaXJzdAoKICAgICAgICByZXNldFJvdXRlcigpOwogICAgICAgIGNvbW1pdCgnUkVTRVRfU1RBVEUnKTsKICAgICAgICByZXNvbHZlKCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKICAvLyByZW1vdmUgdG9rZW4KICByZXNldFRva2VuOiBmdW5jdGlvbiByZXNldFRva2VuKF9yZWY2KSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjYuY29tbWl0OwogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgIHJlbW92ZVRva2VuKCk7IC8vIG11c3QgcmVtb3ZlICB0b2tlbiAgZmlyc3QKCiAgICAgIGNvbW1pdCgnUkVTRVRfU1RBVEUnKTsKICAgICAgcmVzb2x2ZSgpOwogICAgfSk7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogc3RhdGUsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgYWN0aW9uczogYWN0aW9ucwp9Ow=="},{"version":3,"sources":["C:/Users/Sher/Desktop/1/src/store/modules/user.js"],"names":["loginByVerifyCode","loginByPassword","getCode","logout","getInfo","getToken","setToken","removeToken","resetRouter","getDefaultState","token","name","avatar","phone","state","mutations","RESET_STATE","Object","assign","SET_TOKEN","SET_NAME","SET_AVATAR","SET_PHONE","actions","userInfo","commit","password","Promise","resolve","reject","login","then","response","data","catch","error","verify","baseInfo","console","log","resetToken","namespaced"],"mappings":"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","sourcesContent":["import { loginByVerifyCode, loginByPassword, getCode, logout, getInfo } from '@/api/user'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\nimport { resetRouter } from '@/router'\n\n//state和mutations里按需进行删除和添加，比如说，如果你需要存储一个用户id字段用于后续接口，直接添加进来，用this.$store.state.user.id便可在后续文件中引用\nconst getDefaultState = () => {\n  return {\n    token: getToken(),\n    name: '',\n    avatar: '',\n    phone: ''\n  }\n}\n\nconst state = getDefaultState()\n\nconst mutations = {\n  RESET_STATE: (state) => {\n    Object.assign(state, getDefaultState())\n  },\n  SET_TOKEN: (state, token) => {\n    state.token = token\n  },\n  SET_NAME  : (state, name  ) => {\n    state.name = name \n  },\n  SET_AVATAR: (state, avatar) => {\n    state.avatar = avatar\n  },\n  SET_PHONE: (state, phone) => {\n    state.phone = phone\n  },\n}\n\nconst actions = {\n  //密码登录\n  loginByPassword({ commit }, userInfo) {\n    const { phone, password } = userInfo\n    return new Promise((resolve, reject) => {\n      login({ phone: phone, password: password }).then(response => {\n        const { data } = response\n        commit('SET_TOKEN', data)\n        setToken(data.token)\n        resolve()\n      }).catch(error => {\n        reject(error)\n      })\n    })\n  },\n\n  //验证码登录\n  loginByVerifyCode({ commit }, userInfo) {\n    const { name  , phone, verify } = userInfo\n    return new Promise((resolve, reject) => {\n      login({ name  : name  , phone: phone, verify: verify }).then(response => {\n        const { data } = response\n        commit('SET_TOKEN', data)\n        setToken(data)\n        resolve()\n      }).catch(error => {\n        reject(error)\n      })\n    })\n  },\n\n  // get user info\n  getInfo({ commit, state }) {\n    return new Promise((resolve, reject) => {\n      getInfo(state.token).then(response => {\n        const { data } = response\n\n        if (!data) {\n          return reject('Verification failed, please Login again.')\n        }\n\n        const { name , phone } = data\n\n        commit('SET_name ', name  )\n        commit('SET_PHONE', phone)\n        resolve(data)\n      }).catch(error => {\n        reject(error)\n      })\n    })\n  },\n\n  // 获取验证码\n  getCode({ commit }, baseInfo) {\n    const { name, phone } = baseInfo;\n    return new Promise((resolve, reject) => {\n      getCode().then(response => {\n        console.log('获取验证码')\n        resolve()\n        const { data } = response\n        commit('SET_TOKEN', data)\n        setToken(data)\n        resolve()\n      }).catch(error => {\n        reject(error)\n        console.log('验证码获取失败')\n      })\n    })\n  },\n\n  // user logout\n  logout({ commit, state }) {\n    return new Promise((resolve, reject) => {\n      logout(state.token).then(() => {\n        removeToken() // must remove  token  first\n        resetRouter()\n        commit('RESET_STATE')\n        resolve()\n      }).catch(error => {\n        reject(error)\n      })\n    })\n  },\n\n  // remove token\n  resetToken({ commit }) {\n    return new Promise(resolve => {\n      removeToken() // must remove  token  first\n      commit('RESET_STATE')\n      resolve()\n    })\n  }\n}\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions\n}\n\n"]}]}