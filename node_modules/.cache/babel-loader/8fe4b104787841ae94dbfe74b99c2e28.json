{"remainingRequest":"C:\\Users\\Sher\\Desktop\\1\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Sher\\Desktop\\1\\src\\utils\\request.js","dependencies":[{"path":"C:\\Users\\Sher\\Desktop\\1\\src\\utils\\request.js","mtime":1633093754996},{"path":"C:\\Users\\Sher\\Desktop\\1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Sher\\Desktop\\1\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7IC8vIGltcG9ydCB7IE1lc3NhZ2VCb3gsIE1lc3NhZ2UgfSBmcm9tICdlbGVtZW50LXVpJwoKaW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgc3RvcmUgZnJvbSAnQC9zdG9yZSc7CmltcG9ydCB7IGdldFRva2VuIH0gZnJvbSAnQC91dGlscy9hdXRoJzsKYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5wb3N0WydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJzsgLy8gY3JlYXRlIGFuIGF4aW9zIGluc3RhbmNlCgp2YXIgc2VydmljZSA9IGF4aW9zLmNyZWF0ZSh7CiAgLy8gYmFzZVVSTDogJ2h0dHA6Ly8xMjcuMC4wLjE6NDUyMy9tb2NrLzQyMTM4MicsCiAgYmFzZVVSTDogcHJvY2Vzcy5lbnYuVlVFX0FQUF9CQVNFX0FQSSwKICAvLyBiYXNlVVJMOiBwcm9jZXNzLmVudi5WVUVfQVBQX0JBU0VfQVBJLCAvLyB1cmwgPSBiYXNlIHVybCArIHJlcXVlc3QgdXJsCiAgLy8gd2l0aENyZWRlbnRpYWxzOiB0cnVlLCAvLyBzZW5kIGNvb2tpZXMgd2hlbiBjcm9zcy1kb21haW4gcmVxdWVzdHMKICB0aW1lb3V0OiA1MDAwMCAvLyByZXF1ZXN0IHRpbWVvdXQKCn0pOyAvLyByZXF1ZXN0IGludGVyY2VwdG9yCgpzZXJ2aWNlLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgLy8gZG8gc29tZXRoaW5nIGJlZm9yZSByZXF1ZXN0IGlzIHNlbnQKICBpZiAoc3RvcmUuZ2V0dGVycy50b2tlbikgewogICAgLy8gbGV0IGVhY2ggcmVxdWVzdCBjYXJyeSB0b2tlbgogICAgLy8gWydYLVRva2VuJ10gaXMgYSBjdXN0b20gaGVhZGVycyBrZXkKICAgIC8vIHBsZWFzZSBtb2RpZnkgaXQgYWNjb3JkaW5nIHRvIHRoZSBhY3R1YWwgc2l0dWF0aW9uCiAgICBjb25maWcuaGVhZGVycy50b2tlbiA9IGdldFRva2VuKCk7IC8vIGNvbmZpZy5oZWFkZXJzWyd0b2tlbiddID0gZ2V0VG9rZW4oKQogIH0KCiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLy8gZG8gc29tZXRoaW5nIHdpdGggcmVxdWVzdCBlcnJvcgogIGNvbnNvbGUubG9nKGVycm9yKTsgLy8gZm9yIGRlYnVnCgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvLyByZXNwb25zZSBpbnRlcmNlcHRvcgoKc2VydmljZS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKAovKioKICogSWYgeW91IHdhbnQgdG8gZ2V0IGh0dHAgaW5mb3JtYXRpb24gc3VjaCBhcyBoZWFkZXJzIG9yIHN0YXR1cwogKiBQbGVhc2UgcmV0dXJuICByZXNwb25zZSA9PiByZXNwb25zZQoqLwoKLyoqCiAqIERldGVybWluZSB0aGUgcmVxdWVzdCBzdGF0dXMgYnkgY3VzdG9tIGNvZGUKICogSGVyZSBpcyBqdXN0IGFuIGV4YW1wbGUKICogWW91IGNhbiBhbHNvIGp1ZGdlIHRoZSBzdGF0dXMgYnkgSFRUUCBTdGF0dXMgQ29kZQogKi8KZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgdmFyIHJlcyA9IHJlc3BvbnNlLmRhdGE7IC8vY29uc29sZS5sb2cocmVzKQogIC8vIGlmIHRoZSBjdXN0b20gY29kZSBpcyBub3QgMjAwMDAsIGl0IGlzIGp1ZGdlZCBhcyBhbiBlcnJvci4KCiAgaWYgKHJlcy5zdGF0dXMgIT09IDIwMCkgewogICAgY29uc29sZS5sb2cocmVzKTsKICAgIE1lc3NhZ2UoewogICAgICBtZXNzYWdlOiByZXMubWVzc2FnZSB8fCAn5Ye66ZSZ5LqGJywKICAgICAgdHlwZTogJ2Vycm9yJywKICAgICAgZHVyYXRpb246IDUgKiAxMDAwMAogICAgfSk7CiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKHJlcy5tZXNzYWdlIHx8ICdFcnJvcicpKTsKICB9IGVsc2UgewogICAgcmV0dXJuIHJlczsKICB9Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUubG9nKCdlcnInICsgZXJyb3IpOyAvLyBmb3IgZGVidWcKCiAgTWVzc2FnZSh7CiAgICBtZXNzYWdlOiBlcnJvci5tc2csCiAgICB0eXBlOiAnZXJyb3InLAogICAgZHVyYXRpb246IDUgKiAxMDAwMAogIH0pOwogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwpleHBvcnQgZGVmYXVsdCBzZXJ2aWNlOw=="},{"version":3,"sources":["C:/Users/Sher/Desktop/1/src/utils/request.js"],"names":["axios","Message","store","getToken","defaults","headers","post","service","create","baseURL","process","env","VUE_APP_BASE_API","timeout","interceptors","request","use","config","getters","token","error","console","log","Promise","reject","response","res","data","status","message","type","duration","Error","msg"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEAH,KAAK,CAACI,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C,C,CAGA;;AACA,IAAMC,OAAO,GAAGP,KAAK,CAACQ,MAAN,CAAa;AAC3B;AACAC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,gBAFM;AAG3B;AACA;AACAC,EAAAA,OAAO,EAAE,KALkB,CAKZ;;AALY,CAAb,CAAhB,C,CAQA;;AACAN,OAAO,CAACO,YAAR,CAAqBC,OAArB,CAA6BC,GAA7B,CACE,UAAAC,MAAM,EAAI;AACR;AAEA,MAAIf,KAAK,CAACgB,OAAN,CAAcC,KAAlB,EAAyB;AACvB;AACA;AACA;AACAF,IAAAA,MAAM,CAACZ,OAAP,CAAec,KAAf,GAAuBhB,QAAQ,EAA/B,CAJuB,CAKvB;AACD;;AACD,SAAOc,MAAP;AACD,CAZH,EAaE,UAAAG,KAAK,EAAI;AACP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAFO,CAEY;;AACnB,SAAOG,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAjBH,E,CAoBA;;AACAb,OAAO,CAACO,YAAR,CAAqBW,QAArB,CAA8BT,GAA9B;AACE;AACF;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACE,UAAAS,QAAQ,EAAI;AACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAArB,CADU,CAEV;AACA;;AACA,MAAID,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB;AACtBP,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAzB,IAAAA,OAAO,CAAC;AACN4B,MAAAA,OAAO,EAAEH,GAAG,CAACG,OAAJ,IAAe,KADlB;AAENC,MAAAA,IAAI,EAAE,OAFA;AAGNC,MAAAA,QAAQ,EAAE,IAAI;AAHR,KAAD,CAAP;AAKA,WAAOR,OAAO,CAACC,MAAR,CAAe,IAAIQ,KAAJ,CAAUN,GAAG,CAACG,OAAJ,IAAe,OAAzB,CAAf,CAAP;AACD,GARD,MAQO;AACL,WAAOH,GAAP;AACD;AACF,CA1BH,EA2BE,UAAAN,KAAK,EAAI;AACPC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQF,KAApB,EADO,CACoB;;AAC3BnB,EAAAA,OAAO,CAAC;AACN4B,IAAAA,OAAO,EAAET,KAAK,CAACa,GADT;AAENH,IAAAA,IAAI,EAAE,OAFA;AAGNC,IAAAA,QAAQ,EAAE,IAAI;AAHR,GAAD,CAAP;AAKA,SAAOR,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD,CAnCH;AAsCA,eAAeb,OAAf","sourcesContent":["import axios from 'axios'\n// import { MessageBox, Message } from 'element-ui'\nimport { Message } from 'element-ui'\nimport store from '@/store'\nimport { getToken } from '@/utils/auth'\n\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\n\n// create an axios instance\nconst service = axios.create({\n  // baseURL: 'http://127.0.0.1:4523/mock/421382',\n  baseURL: process.env.VUE_APP_BASE_API,\n  // baseURL: process.env.VUE_APP_BASE_API, // url = base url + request url\n  // withCredentials: true, // send cookies when cross-domain requests\n  timeout: 50000 // request timeout\n})\n\n// request interceptor\nservice.interceptors.request.use(\n  config => {\n    // do something before request is sent\n\n    if (store.getters.token) {\n      // let each request carry token\n      // ['X-Token'] is a custom headers key\n      // please modify it according to the actual situation\n      config.headers.token = getToken()\n      // config.headers['token'] = getToken()\n    }\n    return config\n  },\n  error => {\n    // do something with request error\n    console.log(error) // for debug\n    return Promise.reject(error)\n  }\n)\n\n// response interceptor\nservice.interceptors.response.use(\n  /**\n   * If you want to get http information such as headers or status\n   * Please return  response => response\n  */\n\n  /**\n   * Determine the request status by custom code\n   * Here is just an example\n   * You can also judge the status by HTTP Status Code\n   */\n  response => {\n    const res = response.data\n    //console.log(res)\n    // if the custom code is not 20000, it is judged as an error.\n    if (res.status !== 200) {\n      console.log(res)\n      Message({\n        message: res.message || '出错了',\n        type: 'error',\n        duration: 5 * 10000\n      })\n      return Promise.reject(new Error(res.message || 'Error'))\n    } else {\n      return res\n    }\n  },\n  error => {\n    console.log('err' + error) // for debug\n    Message({\n      message: error.msg,\n      type: 'error',\n      duration: 5 * 10000\n    })\n    return Promise.reject(error)\n  }\n)\n\nexport default service"]}]}